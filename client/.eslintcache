[{"D:\\Projects\\JS\\NoWires\\client\\src\\index.js":"1","D:\\Projects\\JS\\NoWires\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\JS\\NoWires\\client\\src\\App.js":"3","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Home\\Home.js":"4","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Header\\Header.js":"5","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Mockup\\Mockup.js":"6","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\Dashboard.js":"7","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\FilesMenu\\FilesMenu.js":"8","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileExplorer.js":"9","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\ExplorerMenu.js":"10","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\SideBar\\Sidebar2.js":"11","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\SideBar\\Sidebar.js":"12","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\FileComponent.js":"13","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\IconComponent\\IconComponent.js":"14","D:\\Projects\\JS\\NoWires\\client\\src\\components\\DragAndDrop\\DragAndDrop.js":"15","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Modal\\Modal.js":"16","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Backdrop\\Backdrop.js":"17","D:\\Projects\\JS\\NoWires\\client\\src\\hoc\\Auxiliary.js":"18","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\CreateFolder\\CreateFolder.js":"19","D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpTypes.js":"20","D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpReducer.js":"21"},{"size":901,"mtime":1614950279568,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":635,"mtime":1612799322780,"results":"25","hashOfConfig":"23"},{"size":3951,"mtime":1615740352499,"results":"26","hashOfConfig":"23"},{"size":2228,"mtime":1614957849308,"results":"27","hashOfConfig":"23"},{"size":964,"mtime":1611740330830,"results":"28","hashOfConfig":"23"},{"size":307,"mtime":1613315842817,"results":"29","hashOfConfig":"23"},{"size":7054,"mtime":1614955456288,"results":"30","hashOfConfig":"23"},{"size":356,"mtime":1613752214849,"results":"31","hashOfConfig":"23"},{"size":18008,"mtime":1615965409277,"results":"32","hashOfConfig":"23"},{"size":4203,"mtime":1615789699077,"results":"33","hashOfConfig":"23"},{"size":3027,"mtime":1613315757767,"results":"34","hashOfConfig":"23"},{"size":2112,"mtime":1615828376241,"results":"35","hashOfConfig":"23"},{"size":2591,"mtime":1613912867391,"results":"36","hashOfConfig":"23"},{"size":3176,"mtime":1614079843966,"results":"37","hashOfConfig":"23"},{"size":575,"mtime":1614071993197,"results":"38","hashOfConfig":"23"},{"size":234,"mtime":1614071982320,"results":"39","hashOfConfig":"23"},{"size":61,"mtime":1614060767137,"results":"40","hashOfConfig":"23"},{"size":985,"mtime":1615966862127,"results":"41","hashOfConfig":"23"},{"size":48,"mtime":1614944642533,"results":"42","hashOfConfig":"23"},{"size":743,"mtime":1614945441293,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ftbm9k",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Projects\\JS\\NoWires\\client\\src\\index.js",[],["89","90"],"D:\\Projects\\JS\\NoWires\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\App.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Home\\Home.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Header\\Header.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Mockup\\Mockup.js",[],["91","92"],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\Dashboard.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\FilesMenu\\FilesMenu.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileExplorer.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\ExplorerMenu.js",["93"],"import { React, useEffect, useState } from 'react';\r\nimport FileComponent from '../FileComponent/FileComponent';\r\nimport Modal from '../../Modal/Modal'\r\nimport axios from 'axios'\r\nimport './ExplorerMenu.css'\r\nimport DragAndDrop from '../../DragAndDrop/DragAndDrop';\r\nimport CreateFolder from './CreateFolder/CreateFolder'\r\n// import { Menu, Item, useContextMenu } from \"react-contexify\";\r\nimport {\r\n    MenuItem,\r\n    ControlledMenu\r\n} from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css'\r\n\r\n// const MENU_ID = \"menu-id\";\r\n\r\nconst ExplorerMenu = () => {\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [currentDirectoryPath, setCurrentDirectoryPath] = useState('/');\r\n    const [modalState, setModalState] = useState(false);\r\n    const [renameModalState, setRenameModalState] = useState(false);\r\n\r\n    // used for menu's.\r\n    // const [menuProp, setMenuProp] = useState(null);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\r\n    const [itemData, setItemData] = useState(\"File/Folder\");\r\n\r\n    useEffect(() => {\r\n        if (currentDirectoryPath === '/') {\r\n            axios.get('/rootDirectory')\r\n                .then((res) => {\r\n                    setFileList(res.data);\r\n                })\r\n                .catch(() => {\r\n                    console.log('error while fetching files list');\r\n                });\r\n        }\r\n        else {\r\n            axios.post('/changePath', { path: currentDirectoryPath })\r\n                .then(res => {\r\n                    setFileList(res.data);\r\n                })\r\n                .catch(() => {\r\n                    console.log('error while fetching files list');\r\n                });\r\n        }\r\n    }, [currentDirectoryPath])\r\n\r\n    //CreateFolder\r\n    const createFolder = folderName => {\r\n\r\n        axios.post('/createFolder', { name: folderName, path: currentDirectoryPath })\r\n            .then(res => {\r\n                setFileList(res.data);\r\n            })\r\n            .catch(() => {\r\n                console.log('error while fetching files list');\r\n            });\r\n    }\r\n\r\n    const renameItem = newName => {\r\n        let oldName = itemData.slice(0,-1);\r\n        let ext = oldName.split('.').pop();\r\n        newName = newName + '.'+ ext;\r\n\r\n        axios.post('/renameFile', { oldName: oldName, path: currentDirectoryPath, newName: newName })\r\n            .then(res => {\r\n                setFileList(res.data);\r\n            })\r\n            .catch(() => {\r\n                console.log('error while renaming file');\r\n            })\r\n    }\r\n\r\n    const changePath = (name, type) => {\r\n        if (type === 2) {\r\n            setCurrentDirectoryPath(currentDirectoryPath + '/' + name) // works for ftp-server app\r\n            // setCurrentDirectoryPath(currentDirectoryPath + name) \r\n        }\r\n        else {\r\n            // Download file function..\r\n            axios.post('/downloadFile', { path: currentDirectoryPath, name: name })\r\n                .then(res => {\r\n                    alert(res.data + ' Implement a download progress bar');\r\n                })\r\n                .catch(() => {\r\n                    console.log('error while going back');\r\n                });\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        const p = (currentDirectoryPath.slice(0, currentDirectoryPath.lastIndexOf('/')));\r\n        if (p !== '') {\r\n            axios.post('/changePath', { path: p })\r\n                .then(res => {\r\n                    setFileList(res.data);\r\n                })\r\n                .catch(() => {\r\n                    console.log('error while going back');\r\n                });\r\n            setCurrentDirectoryPath(currentDirectoryPath.slice(0, currentDirectoryPath.lastIndexOf('/')))\r\n        }\r\n        else {\r\n            alert('nope nope')\r\n        }\r\n    }\r\n\r\n    const getCodedBuffer = file => {\r\n        return new Promise(function (resolve, reject) {\r\n            let fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file);\r\n\r\n            fileReader.onload = function (ev) {\r\n                const array = new Uint8Array(ev.target.result);\r\n                // const fileByteArray = [];\r\n                let codedBuffer = '';\r\n\r\n                for (let i = 0; i < array.length; i++) {\r\n                    // fileByteArray.push(array[i]);\r\n                    codedBuffer += String.fromCharCode(array[i]);\r\n                }\r\n                resolve(codedBuffer);  // successful\r\n            }\r\n            fileReader.onerror = reject; // call reject if error\r\n        })\r\n    }\r\n\r\n    const handleDrop = files => {\r\n        // Implement upload function\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            getCodedBuffer(files[i]).then(result => {\r\n                axios.post('/handleDrop', { value: result, fileName: files[i].name, path: currentDirectoryPath })\r\n                    .then(res => {\r\n                        setFileList(res.data);\r\n                        alert('Uploaded. Implement an upload progress bar!!')\r\n                    })\r\n                    .catch(err => {\r\n                        alert('error occured while uploading')\r\n                    });\r\n            })\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalState(false);\r\n    }\r\n\r\n    const closeRenameModal = () => {\r\n        setRenameModalState(false);\r\n    }\r\n\r\n    // const { show } = useContextMenu({\r\n    //     id: MENU_ID,\r\n    // });\r\n\r\n    // const handleItemClick = ({ event, props, triggerEvent, data }) => {\r\n    //     console.log(event, props, triggerEvent, data);\r\n\r\n    //     let fileName = props.id.slice(0, -1);\r\n    //     let fileType = props.id.charAt(fileName.length);\r\n\r\n    //     switch (event.currentTarget.id) {\r\n    //         case \"rename\":\r\n    //             // logic to remove the row\r\n    //             console.log(props.id + \" \" + fileName + \" \" + \"rename\"); // contain to item.id passed by `show`\r\n    //             break;\r\n\r\n    //         case \"delete\":\r\n    //             console.log(props.id + \" delete \" + fileType);\r\n\r\n\r\n    //             let deletePath = currentDirectoryPath + '/' + fileName\r\n    //             console.log(deletePath);\r\n\r\n    //             if (fileType === \"2\") {\r\n    //                 // Delete a directory\r\n    //                 console.log('deleting a folder');\r\n    //                 axios.post('/deleteDir', { path: currentDirectoryPath, fileName: fileName })\r\n    //                     .then(res => {\r\n    //                         setFileList(res.data);\r\n    //                     })\r\n    //                     .catch(() => {\r\n    //                         console.log('error while deleting file');\r\n    //                     });\r\n    //             }\r\n    //             else {\r\n    //                 // Delete a file\r\n    //                 console.log('deleting a file');\r\n    //                 axios.post('/deleteFile', { path: currentDirectoryPath, fileName: fileName })\r\n    //                     .then(res => {\r\n    //                         setFileList(res.data);\r\n    //                     })\r\n    //                     .catch(() => {\r\n    //                         console.log('error while deleting file');\r\n    //                     });\r\n    //             }\r\n    //             break;\r\n\r\n    //         case \"download\":\r\n    //             console.log(fileType + \" download\");\r\n    //             // downloading a file.. \r\n\r\n    //             if (fileType === \"2\") {\r\n    //                 console.log('downloading a folder');\r\n\r\n    //                 axios.post('/downloadDirectory', { path: currentDirectoryPath, name: fileName })\r\n    //                     .then(res => {\r\n    //                         alert(res.data + ' Implement a download progress bar');\r\n    //                     })\r\n    //                     .catch(() => {\r\n    //                         console.log('error while going back');\r\n    //                     });\r\n    //             }\r\n    //             else {\r\n    //                 // downloading a file\r\n    //                 console.log('downloading a File');\r\n    //                 axios.post('/downloadFile', { path: currentDirectoryPath, name: fileName })\r\n    //                     .then(res => {\r\n    //                         alert(res.data + ' Implement a download progress bar');\r\n    //                     })\r\n    //                     .catch(() => {\r\n    //                         console.log('error while going back');\r\n    //                     });\r\n    //             }\r\n    //             break;\r\n    //         default:\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n\r\n    const handleItemClick = e => {\r\n\r\n\r\n        let fileName = itemData.slice(0, -1);\r\n        let fileType = itemData.charAt(fileName.length);\r\n\r\n        switch (e.value) {\r\n            case \"rename\":\r\n                // logic to remove the row\r\n                console.log(itemData + \" \" + fileName + \" \" + \"rename\"); // contain to item.id passed by `show`\r\n                setRenameModalState(true);\r\n                break;\r\n\r\n            case \"delete\":\r\n                console.log(itemData + \" delete \" + fileType);\r\n\r\n\r\n                let deletePath = currentDirectoryPath + '/' + fileName\r\n                console.log(deletePath);\r\n\r\n                if (fileType === \"2\") {\r\n                    // Delete a directory\r\n                    console.log('deleting a folder');\r\n                    axios.post('/deleteDir', { path: currentDirectoryPath, fileName: fileName })\r\n                        .then(res => {\r\n                            setFileList(res.data);\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while deleting file');\r\n                        });\r\n                }\r\n                else {\r\n                    // Delete a file\r\n                    console.log('deleting a file');\r\n                    axios.post('/deleteFile', { path: currentDirectoryPath, fileName: fileName })\r\n                        .then(res => {\r\n                            setFileList(res.data);\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while deleting file');\r\n                        });\r\n                }\r\n                break;\r\n\r\n            case \"download\":\r\n                console.log(fileType + \" download\");\r\n                // downloading a file.. \r\n\r\n                if (fileType === \"2\") {\r\n                    console.log('downloading a folder');\r\n\r\n                    axios.post('/downloadDirectory', { path: currentDirectoryPath, name: fileName })\r\n                        .then(res => {\r\n                            alert(res.data + ' Implement a download progress bar');\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while going back');\r\n                        });\r\n                }\r\n                else {\r\n                    // downloading a file\r\n                    console.log('downloading a File');\r\n                    axios.post('/downloadFile', { path: currentDirectoryPath, name: fileName })\r\n                        .then(res => {\r\n                            alert(res.data + ' Implement a download progress bar');\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while going back');\r\n                        });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // const displayMenu = (e) => {\r\n    //     // put whatever custom logic you need\r\n    //     // you can even decide to not display the Menu\r\n    //     console.log('reaching displayMenu (e)');\r\n    //     show(e, { props: { id: e.currentTarget.id } });\r\n    // }\r\n\r\n    const displayMenu = (e, data) => {\r\n        e.preventDefault();\r\n        setAnchorPoint({ x: e.clientX, y: e.clientY });\r\n        setOpen(true);\r\n        setItemData(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"explorer-main-menu\">\r\n            <div className=\"explorer-title\">\r\n                <h1 className=\"dashboard-copy poppins-bold-black-27-3px\">File Explorer</h1>\r\n                <div className=\"overlap-group2\">\r\n                    <img\r\n                        alt=\"magnifier\"\r\n                        className=\"oval-9\"\r\n                        src=\"/images/icons/Magnifier.svg\"\r\n                    />\r\n                    {/* <img\r\n                        className=\"path-6\"\r\n                        src=\"/images/icons/Magnifier.svg\"\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"directory-path\">\r\n\r\n                <div className=\"overlap-group-1\">\r\n                    <div className=\"rectangle-9\"></div>\r\n                    <div className=\"rectangle-10\"></div>\r\n                    <div className=\"rectangle-5-copy\"></div>\r\n                </div>\r\n                <p className=\"text-1 valign-text-middle poppins-medium-black-14px\">\r\n                    {currentDirectoryPath === '/' ? 'Internal Storage >' : currentDirectoryPath.slice(2).replaceAll('/', ' > ')}</p>\r\n                <span className=\"goBack\">\r\n                    <img alt=\"goBack\" onClick={() => goBack()}\r\n                        className=\"goBackImg\" src=\"/images/icons/goBack.svg\"></img>\r\n                </span>\r\n                {/*\r\n                <span className=\"upload\">\r\n                    <input type=\"file\" name=\"u\" />\r\n                </span> */}\r\n                {/* Modal */}\r\n                <Modal\r\n                    show={modalState}\r\n                    modalClosed={closeModal}\r\n                    color=\"#fff\">\r\n                    <CreateFolder\r\n                        placeholder=\"Enter folder name\"\r\n                        title=\"Create Folder\"\r\n                        action=\"Create\"\r\n                        create={(folderName) => createFolder(folderName)}\r\n                        closeHandler={closeModal}\r\n                        path={currentDirectoryPath} />\r\n                </Modal>\r\n\r\n                <div className=\"frame-1\">\r\n                    <div className=\"overlap-group\">\r\n                        <div className=\"rectangle-1 bizarre-border-1px\"></div>\r\n                        <div className=\"rectangle-1 bizarre-border-1px\"></div>\r\n                        <div className=\"create-folder valign-text-middle poppins-light-black-14px\"\r\n                            onClick={() => setModalState(true)} >\r\n                            Create Folder\r\n                        </div>\r\n                        <img\r\n                            alt=\"addFolder\"\r\n                            className=\"icons8-add-older-50-1\"\r\n                            src=\"/images/icons/addFolder.svg\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"explorer-header\">\r\n                <div className=\"place valign-text-middle poppins-light-black-14px\">Name</div>\r\n                <div className=\"explorer-last-modified valign-text-middle poppins-light-black-14px\">Last Modified</div>\r\n                <div className=\"size valign-text-middle poppins-light-black-14px\">Size</div>\r\n            </div>\r\n\r\n            {/* popup for rename */}\r\n            <Modal\r\n                show={renameModalState}\r\n                modalClosed={closeRenameModal}\r\n                color=\"#fff\">\r\n                <CreateFolder\r\n                    placeholder=\"Enter new name\"\r\n                    title={\"Rename \" + itemData.slice(0, -1)}\r\n                    create={(newName) => renameItem(newName)}\r\n                    closeHandler={closeRenameModal}\r\n                    action=\"Rename\"\r\n                    path={currentDirectoryPath +'/'+ itemData.slice(0, -1)} />\r\n            </Modal>\r\n\r\n            <DragAndDrop handleDrop={handleDrop}>\r\n                <div className=\"explorer-data\">\r\n                    {fileList.length ? fileList.map((item, index) => {\r\n                        return (\r\n                            <FileComponent key={index}\r\n                                id={item.name + item.type}\r\n                                onContextMenu={(e) => displayMenu(e, item.name + item.type)}\r\n                                onClick={() => changePath(item.name, item.type)}\r\n                                name={item.name}\r\n                                type={item.type}\r\n                                size={item.size}\r\n                                lastMod={item.modifiedAt} />\r\n                        )\r\n                    }) : null}\r\n\r\n                    {/* <Menu id={MENU_ID}>\r\n                        <Item id=\"rename\" onClick={handleItemClick}>\r\n                            Rename\r\n                        </Item>\r\n                        <Item id=\"delete\" onClick={handleItemClick}>\r\n                            Delete\r\n                        </Item>\r\n                        <Item id=\"download\" onClick={handleItemClick}>\r\n                            Download\r\n                        </Item>\r\n                    </Menu> */}\r\n\r\n                    <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\r\n                        onClose={() => setOpen(false)}>\r\n                        <MenuItem value=\"rename\" onClick={handleItemClick}>\r\n                            Rename\r\n                        </MenuItem>\r\n                        <MenuItem value=\"delete\" onClick={handleItemClick}>\r\n                            Delete\r\n                        </MenuItem>\r\n                        <MenuItem value=\"download\" onClick={handleItemClick}>\r\n                            Download\r\n                        </MenuItem>\r\n                    </ControlledMenu>\r\n\r\n                </div>\r\n                {/* Add lottie animation if no files are present */}\r\n            </DragAndDrop>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ExplorerMenu;","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\SideBar\\Sidebar2.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Dashboard\\SideBar\\Sidebar.js",["94","95","96","97","98"],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\FileComponent.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\IconComponent\\IconComponent.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\DragAndDrop\\DragAndDrop.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Modal\\Modal.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Backdrop\\Backdrop.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\hoc\\Auxiliary.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\CreateFolder\\CreateFolder.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpTypes.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpReducer.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":245,"column":61,"nodeType":"107","messageId":"108","endLine":245,"endColumn":62},{"ruleId":"109","severity":1,"message":"110","line":18,"column":21,"nodeType":"111","endLine":21,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":34,"column":21,"nodeType":"111","endLine":37,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":45,"column":21,"nodeType":"111","endLine":48,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":59,"column":21,"nodeType":"111","endLine":62,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":68,"column":13,"nodeType":"111","endLine":71,"endColumn":15},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
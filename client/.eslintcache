[{"D:\\Projects\\JS\\NoWires\\client\\src\\index.js":"1","D:\\Projects\\JS\\NoWires\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\JS\\NoWires\\client\\src\\App.js":"3","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Header\\Header.js":"4","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\FileComponent.js":"5","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\IconComponent\\IconComponent.js":"6","D:\\Projects\\JS\\NoWires\\client\\src\\components\\DragAndDrop\\DragAndDrop.js":"7","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Modal\\Modal.js":"8","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Backdrop\\Backdrop.js":"9","D:\\Projects\\JS\\NoWires\\client\\src\\hoc\\Auxiliary.js":"10","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\CreateFolder\\CreateFolder.js":"11","D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpTypes.js":"12","D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpReducer.js":"13","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\Downloader\\Downloader.js":"14","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\Downloader\\useDownloader.js":"15","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\DownloadPopup\\DownloadPopup.js":"16","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\SearchBar\\SearchBar.js":"17","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Home\\Home.js":"18","D:\\Projects\\JS\\NoWires\\client\\src\\components\\SideBar\\Sidebar2.js":"19","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Dashboard\\Dashboard.js":"20","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Dashboard\\FilesMenu\\FilesMenu2.js":"21","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\About\\About.js":"22","D:\\Projects\\JS\\NoWires\\client\\src\\components\\PhoneSection\\Phone.js":"23","D:\\Projects\\JS\\NoWires\\client\\src\\Errors\\NoFiles\\NoFiles.js":"24","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Footer\\Footer.js":"25","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\FileExplorer\\ExplorerMenu\\ExplorerMenu.js":"26","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\FileExplorer\\FileExplorer.js":"27","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Snackbar\\Snackbar.js":"28","D:\\Projects\\JS\\NoWires\\client\\src\\helpers\\useSingleClick\\useSingleAndDoubleClicks.js":"29","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Contact\\Contact.js":"30","D:\\Projects\\JS\\NoWires\\client\\src\\Errors\\NoConnection\\NoConnection.js":"31"},{"size":902,"mtime":1616608934668,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":766,"mtime":1617887867958,"results":"35","hashOfConfig":"33"},{"size":2913,"mtime":1618114086160,"results":"36","hashOfConfig":"33"},{"size":2533,"mtime":1617810213608,"results":"37","hashOfConfig":"33"},{"size":2591,"mtime":1613912867391,"results":"38","hashOfConfig":"33"},{"size":3176,"mtime":1614079843966,"results":"39","hashOfConfig":"33"},{"size":575,"mtime":1614071993197,"results":"40","hashOfConfig":"33"},{"size":234,"mtime":1614071982320,"results":"41","hashOfConfig":"33"},{"size":61,"mtime":1614060767137,"results":"42","hashOfConfig":"33"},{"size":977,"mtime":1615967210310,"results":"43","hashOfConfig":"33"},{"size":48,"mtime":1614944642533,"results":"44","hashOfConfig":"33"},{"size":977,"mtime":1617513895155,"results":"45","hashOfConfig":"33"},{"size":4065,"mtime":1616603900148,"results":"46","hashOfConfig":"33"},{"size":683,"mtime":1616503071270,"results":"47","hashOfConfig":"33"},{"size":1769,"mtime":1616822081561,"results":"48","hashOfConfig":"33"},{"size":1711,"mtime":1617851162637,"results":"49","hashOfConfig":"33"},{"size":4800,"mtime":1617877961157,"results":"50","hashOfConfig":"33"},{"size":3756,"mtime":1617852001281,"results":"51","hashOfConfig":"33"},{"size":325,"mtime":1617771741453,"results":"52","hashOfConfig":"33"},{"size":22372,"mtime":1618230562095,"results":"53","hashOfConfig":"33"},{"size":183,"mtime":1617771611415,"results":"54","hashOfConfig":"33"},{"size":1101,"mtime":1617098330278,"results":"55","hashOfConfig":"33"},{"size":310,"mtime":1617433793436,"results":"56","hashOfConfig":"33"},{"size":866,"mtime":1617116597372,"results":"57","hashOfConfig":"33"},{"size":29840,"mtime":1618243042194,"results":"58","hashOfConfig":"33"},{"size":360,"mtime":1617780192755,"results":"59","hashOfConfig":"33"},{"size":1331,"mtime":1618242751814,"results":"60","hashOfConfig":"33"},{"size":1747,"mtime":1617851083435,"results":"61","hashOfConfig":"33"},{"size":1406,"mtime":1618114505743,"results":"62","hashOfConfig":"33"},{"size":837,"mtime":1617950770165,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ftbm9k",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\Projects\\JS\\NoWires\\client\\src\\index.js",[],["134","135"],"D:\\Projects\\JS\\NoWires\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\App.js",["136"],"import React from 'react'\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home/Home'\nimport Dashboard from './pages/Dashboard/Dashboard'\nimport FileExplorer from './pages/FileExplorer/FileExplorer'\nimport About from './pages/About/About';\nimport Contact from './pages/Contact/Contact';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/dashboard' exact component={Dashboard} />\n          <Route path='/' exact component={Home} />\n          <Route path='/explorer' exact component={FileExplorer} />\n          <Route path='/about' exact component={About} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","D:\\Projects\\JS\\NoWires\\client\\src\\components\\Header\\Header.js",["137","138","139"],"import React, { useEffect, useState } from 'react'\r\nimport './Header.css'\r\nimport { BiMenuAltLeft } from 'react-icons/bi';\r\nimport { IoCloseOutline } from 'react-icons/io5';\r\nimport { TweenMax } from 'gsap'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Contact from '../../pages/Contact/Contact';\r\n// import { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n\r\n    let history = useHistory();\r\n    const [contactPageStatus, setContactPageStatus] = useState(false);\r\n\r\n    const changeRoute = (path) => {\r\n        history.push(path);\r\n    }\r\n\r\n    useEffect(() => {\r\n        TweenMax.from('.navLogo', { autoAlpha: 0, duration: 1, opacity: 0, y: 10, delay: 2 });\r\n        TweenMax.from('.navToggle', { autoAlpha: 0, duration: 1, opacity: 0, y: 10, delay: 2 })\r\n        TweenMax.from('.navItem', { autoAlpha: 0, opacity: 0, duration: 1, delay: 2.1, y: 30, stagger: 0.2, })\r\n    }, [])\r\n\r\n    const revealContactPage = () => {\r\n        console.log('reached')\r\n        setContactPageStatus(true)\r\n    }\r\n\r\n    return (\r\n        <header className=\"l-header\">\r\n            <nav className=\"nav bd-grid-header\">\r\n                <div>\r\n                    <a href=\"/\" className=\"navLogo\">No Wires</a>\r\n                </div>\r\n\r\n                <div className=\"navToggle\" id=\"nav-toggle\" >\r\n                    <BiMenuAltLeft />\r\n                </div>\r\n\r\n                <div className=\"navMenu\" id=\"nav-menu\">\r\n                    <div className=\"navClose\" id=\"nav-close\">\r\n                        <IoCloseOutline />\r\n                    </div>\r\n\r\n                    <ul className=\"navList\">\r\n                        {/* <Link style={{ textDecoration: \"none\" }} to='/home'> */}\r\n                        <li className=\"navItem navLink\">Home</li>\r\n                        {/* </Link> */}\r\n\r\n                        {/* <Link style={{ textDecoration: \"none\" }} to='/myOrders'> */}\r\n                        <li className=\"navItem\" ><a onClick={() => changeRoute(\"/explorer\")} className=\"navLink\">Explorer</a></li>\r\n                        {/* </Link> */}\r\n\r\n                        {/* <Link style={{ textDecoration: \"none\" }} to='/about'> */}\r\n                        <li className=\"navItem\"><a onClick={() => changeRoute(\"/about\")} className=\"navLink\">About</a></li>\r\n                        {/* </Link> */}\r\n\r\n                        {/* <Link style={{ textDecoration: \"none\" }} to='/contact'> */}\r\n                        <li className=\"navItem\"><a onClick={() => revealContactPage()} className=\"navLink\">Contact</a></li>\r\n                        {/* </Link> */}\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            {contactPageStatus && <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}><Contact closeHandler={() => setContactPageStatus(false)} /></div>}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\FileComponent.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\FileComponent\\IconComponent\\IconComponent.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\DragAndDrop\\DragAndDrop.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Modal\\Modal.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Backdrop\\Backdrop.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\hoc\\Auxiliary.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\CreateFolder\\CreateFolder.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpTypes.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\store\\ftp\\ftpReducer.js",["140","141"],"import * as actionTypes from './ftpTypes'\r\n\r\nconst initialState = {\r\n    connectionDetails: {\r\n        host: null,\r\n        port: null,\r\n        username: null,\r\n        password: null,\r\n        secure: null,\r\n        totalSize: null,\r\n        usedSpace: null,\r\n        totalSize: null\r\n    }\r\n}\r\n\r\nconst ftpReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.STORE_USER_DATA: return {\r\n            ...state,\r\n            connectionDetails: {\r\n                host: action.value.host,\r\n                port: action.value.port,\r\n                username: action.value.username,\r\n                password: action.value.password,\r\n                secure: action.value.secure,\r\n                totalSize: action.value.totalSize,\r\n                usedSpace: action.value.usedSpace,\r\n                totalSize: action.value.totalSize\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default ftpReducer;","D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\Downloader\\Downloader.js",["142"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Downloader.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst Downloader = ({ files = [], remove }) => {\r\n  return (\r\n    <div className=\"downloader\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">File Downloader</div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {files.map((file, idx) => (\r\n            <DownloadItem\r\n              key={idx}\r\n              removeFile={() => remove(file.downloadId)}\r\n              {...file}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DownloadItem = ({ name, file, filename, removeFile, currentDirectoryPath, connectionDetails }) => {\r\n  const [downloadInfo, setDownloadInfo] = useState({\r\n    progress: 0,\r\n    completed: false,\r\n    total: 0,\r\n    loaded: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      onDownloadProgress: (progressEvent) => {\r\n        const { loaded, total } = progressEvent;\r\n\r\n        setDownloadInfo({\r\n          progress: Math.floor((loaded * 100) / total),\r\n          loaded,\r\n          total,\r\n          completed: false,\r\n        });\r\n      },\r\n    };\r\n\r\n    // Axios.get(file, {\r\n    //   responseType: \"blob\",\r\n    //   ...options,\r\n    // }).then(function (response) {\r\n    //   console.log(response);\r\n\r\n    //   const url = window.URL.createObjectURL(\r\n    //     new Blob([response.data], {\r\n    //       type: response.headers[\"content-type\"],\r\n    //     })\r\n    //   );\r\n\r\n    //   const link = document.createElement(\"a\");\r\n    //   link.href = url;\r\n    //   link.setAttribute(\"download\", filename);\r\n    //   document.body.appendChild(link);\r\n    //   link.click();\r\n\r\n    //   setDownloadInfo((info) => ({\r\n    //     ...info,\r\n    //     completed: true,\r\n    //   }));\r\n\r\n    //   setTimeout(() => {\r\n    //     removeFile();\r\n    //   }, 4000);\r\n    // });\r\n\r\n    Axios.post('/downloadFile', { path: currentDirectoryPath, name: name, connectionDetails: connectionDetails ,...options})\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        // const url = window.URL.createObjectURL(\r\n        //   new Blob([response.data], {\r\n        //     type: response.headers[\"content-type\"],\r\n        //   })\r\n        // );\r\n\r\n        // const link = document.createElement(\"a\");\r\n        // link.href = url;\r\n        // link.setAttribute(\"download\", filename);\r\n        // document.body.appendChild(link);\r\n        // link.click();\r\n\r\n        setDownloadInfo((info) => ({\r\n          ...info,\r\n          completed: true,\r\n        }));\r\n\r\n        setTimeout(() => {\r\n          removeFile();\r\n        }, 4000);\r\n      })\r\n      .catch((e) => {\r\n        console.log('error while going back ' + e);\r\n      });\r\n\r\n  }, []);\r\n\r\n  const formatBytes = (bytes) => `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\r\n\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"d-inline font-weight-bold text-truncate\">{name}</div>\r\n          <div className=\"d-inline ml-2\">\r\n            <small>\r\n              {downloadInfo.loaded > 0 && (\r\n                <>\r\n                  <span className=\"text-success\">\r\n                    {formatBytes(downloadInfo.loaded)}\r\n                  </span>\r\n                  / {formatBytes(downloadInfo.total)}\r\n                </>\r\n              )}\r\n\r\n              {downloadInfo.loaded === 0 && <>Initializing...</>}\r\n            </small>\r\n          </div>\r\n          <div className=\"d-inline ml-2 ml-auto\">\r\n            {downloadInfo.completed && (\r\n              <span className=\"text-success\">\r\n                Completed\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 mt-2\">\r\n          {/* <ProgressBar\r\n            variant=\"success\"\r\n            now={downloadInfo.progress}\r\n            striped={true}\r\n            label={`${downloadInfo.progress}%`}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Downloader;",["143","144"],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\Downloader\\useDownloader.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\DownloadPopup\\DownloadPopup.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\FileExplorer\\ExplorerMenu\\SearchBar\\SearchBar.js",["145","146","147"],"import React from 'react';\r\nimport './SearchBar.css';\r\nimport { BiSearch } from \"react-icons/bi\";\r\n\r\nconst SearchBar = ({ input: keyword, onChange: setKeyword }) => {\r\n    const BarStyling = { width: \"10rem\", background: \"#F2F1F9\", border: \"none\", padding: \"0.5rem\" };\r\n\r\n    return (\r\n        // <input className=\"searchbar\"\r\n        //     style={BarStyling}\r\n        //     key=\"random1\"\r\n        //     value={keyword}\r\n        //     placeholder={\"search\"}\r\n        // autocomplete=\"off\"\r\n        //     onChange={(e) => setKeyword(e.target.value)}\r\n        // />\r\n        // <div>\r\n\r\n        //     <input id=\"searchBar-search-box\"\r\n        //         autocomplete=\"off\"\r\n        //         type=\"text\"\r\n        //         class=\"searchBar-search-box\"\r\n        //         name=\"q\" />\r\n        //     <label for=\"searchBar-search-box\">\r\n        //         <span class=\"searchBar-search-icon\">\r\n        //             <img src=\"https://img.icons8.com/android/14/000000/search.png\" />\r\n        //         </span>\r\n        //     </label>\r\n        // </div>\r\n\r\n        <div className=\"searchBar\">\r\n            <input id=\"searchBar-search-box\"\r\n                type=\"text\"\r\n                class=\"searchBar-search-box\"\r\n                name=\"q\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                value={keyword}\r\n                placeholder={\"search\"}\r\n                autocomplete=\"off\" />\r\n            <label for=\"searchBar-search-box\">\r\n                <span class=\"searchBar-search-icon\">\r\n                    <img src=\"https://img.icons8.com/android/14/000000/search.png\" />\r\n                </span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Home\\Home.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\SideBar\\Sidebar2.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Dashboard\\Dashboard.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Dashboard\\FilesMenu\\FilesMenu2.js",["148","149","150","151","152","153","154"],"import { React, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport './FilesMenu2.css'\r\nimport DragAndDrop from '../../../components/DragAndDrop/DragAndDrop'\r\nimport FileComponent from '../../../components/FileExplorer/FileComponent/FileComponent'\r\nimport NoFiles from '../../../Errors/NoFiles/NoFiles'\r\nimport axios from 'axios'\r\nimport Snackbar from '../../../components/Snackbar/Snackbar'\r\nimport Modal from '../../../components/Modal/Modal'\r\nimport DownloadPopup from '../../../components/FileExplorer/ExplorerMenu/DownloadPopup/DownloadPopup'\r\nimport CreateFolder from '../../../components/FileExplorer/ExplorerMenu/CreateFolder/CreateFolder'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchBar from '../../../components/FileExplorer/ExplorerMenu/SearchBar/SearchBar'\r\nimport NoConnection from '../../../Errors/NoConnection/NoConnection'\r\n\r\nimport {\r\n    MenuItem,\r\n    ControlledMenu\r\n} from '@szhsin/react-menu';\r\n\r\nconst FilesMenu2 = () => {\r\n\r\n    const connectionDetails = useSelector(state => state != null ? state.connectionDetails : null);\r\n    const [connectionLiveStatus, setConnectionLiveStatus] = useState(true);\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\r\n    const [itemDataa, setItemDataa] = useState({ fileName: \"fileName\", fileType: 1, fileSize: \"230 Mb\" })\r\n\r\n    // current directory and transfer states\r\n    const [currentDirectoryPath, setCurrentDirectoryPath] = useState('/Download');\r\n    const [transferModalState, setTransferModalState] = useState(false);\r\n    const [transferItemDetails, setTransferItemDetails] = useState({ fileName: \"filename\", fileType: 1, fileSize: \"200 Mb\", transferType: \"Download\" });\r\n\r\n    // rename states\r\n    const [renameModalState, setRenameModalState] = useState(false);\r\n\r\n    const [downloaderComponentUI, setDownloaderComponentUI] = useState(true);\r\n    const [snackbarStatus, setSnackbarStatus] = useState(false);\r\n\r\n    // Search states\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    // Error SVG\r\n    const [errorSVG, setErrorSVG] = useState(null);\r\n\r\n    let storagePercent = (connectionDetails.usedSpace / connectionDetails.totalSize) * 100;\r\n\r\n    useEffect(() => {\r\n        axios.post('/changePath', { path: currentDirectoryPath, connectionDetails: connectionDetails })\r\n            .then(res => {\r\n                setFileList(res.data);\r\n            })\r\n            .catch((e) => {\r\n                setConnectionLiveStatus(false)\r\n                console.log('error while fetching files list ' + e);\r\n                setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                    <NoConnection svgHeight={290} svgWidth={336} />\r\n                </div>)\r\n            });\r\n    }, [currentDirectoryPath])\r\n\r\n    useEffect(() => {\r\n        let results = [];\r\n        if (fileList.length > 0) {\r\n            fileList.map(jsFrameworksSearch => {\r\n                if (jsFrameworksSearch.name.toLowerCase().includes(searchTerm.trim()))\r\n                    results.push(jsFrameworksSearch)\r\n            })\r\n        }\r\n        else if (connectionDetails.host != null) {\r\n            setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                <NoFiles />\r\n                <p>No Files</p>\r\n            </div>)\r\n        }\r\n\r\n        setSearchResults(results);\r\n    }, [searchTerm, fileList])\r\n\r\n    let history = useHistory();\r\n\r\n    const changeRoute = (path) => {\r\n        history.push(path);\r\n    }\r\n\r\n    const changePath = (name, type, size) => {\r\n        setTransferItemDetails({ fileSize: size, fileType: type, fileName: name, transferType: \"Download\" });\r\n        if (type === 2) {\r\n            setCurrentDirectoryPath(currentDirectoryPath + '/' + name) // works for ftp-server app\r\n            // setCurrentDirectoryPath(currentDirectoryPath + name) \r\n        }\r\n        else {\r\n\r\n            // file name without extension = filename.split('.').slice(0, -1).join('.')\r\n\r\n            // const file = {\r\n            //     name: name,\r\n            //     // name: \"photo-1\",\r\n            //     thumb:\r\n            //         \"https://images.unsplash.com/photo-1604263439201-171fb8c0fddc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=427&q=80 427w\",\r\n            //     file:\r\n            //         \"https://images.unsplash.com/photo-1604263439201-171fb8c0fddc?rnd=\" +\r\n            //         Math.random(),\r\n\r\n            //     filename: name,\r\n            //     // filename: \"photo-1.jpg\",\r\n            //     currentDirectoryPath: currentDirectoryPath,\r\n            //     connectionDetails: connectionDetails\r\n            // };\r\n\r\n            // downloadFile(file)\r\n\r\n            // Download file function..\r\n            setTransferModalState(true);\r\n            setDownloaderComponentUI(true);\r\n\r\n            console.log(\"Before download \" + downloaderComponentUI);\r\n\r\n            axios.post('/downloadFile', { path: currentDirectoryPath, name: name, connectionDetails: connectionDetails })\r\n                .then(res => {\r\n                    console.log(\"After download: \" + downloaderComponentUI);\r\n                    setDownloaderComponentUI(false)\r\n                    setTransferModalState(false);\r\n                    setSnackbarStatus(true);\r\n                    // alert(res.data + ' Implement a download progress bar');\r\n                })\r\n                .catch((e) => {\r\n                    console.log('error while going back ' + e);\r\n                    setConnectionLiveStatus(false)\r\n                    setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                        <NoConnection svgHeight={290} svgWidth={336} />\r\n                    </div>)\r\n                });\r\n            // }\r\n        }\r\n    }\r\n\r\n    const getCodedBuffer = file => {\r\n        return new Promise(function (resolve, reject) {\r\n            let fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file);\r\n\r\n            fileReader.onload = function (ev) {\r\n                const array = new Uint8Array(ev.target.result);\r\n                // const fileByteArray = [];\r\n                let codedBuffer = '';\r\n\r\n                for (let i = 0; i < array.length; i++) {\r\n                    // fileByteArray.push(array[i]);\r\n                    codedBuffer += String.fromCharCode(array[i]);\r\n                }\r\n                resolve(codedBuffer);  // successful\r\n            }\r\n            fileReader.onerror = reject; // call reject if error\r\n        })\r\n    }\r\n\r\n    const handleDrop = files => {\r\n        // Implement upload function\r\n        setTransferModalState(true);\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n\r\n            let fileType = \"Folder\";\r\n            let fileSize = files[i].size\r\n\r\n            if (files[i].isFile) {\r\n                fileType = 1;\r\n                fileSize = files[i].size;\r\n                console.log(\"file size: \" + files[i].size);\r\n            }\r\n\r\n            setTransferItemDetails({\r\n                fileName: files[i].name,\r\n                fileType: fileType,\r\n                fileSize: fileSize,\r\n                transferType: \"Upload\"\r\n            })\r\n\r\n            getCodedBuffer(files[i]).then(result => {\r\n                axios.post('/handleDrop', { value: result, fileName: files[i].name, path: currentDirectoryPath, connectionDetails: connectionDetails })\r\n                    .then(res => {\r\n                        setTransferModalState(false);\r\n                        setFileList(res.data);\r\n                        setSnackbarStatus(true);\r\n                    })\r\n                    .catch(err => {\r\n                        alert('error occured while uploading ' + err)\r\n                        setConnectionLiveStatus(false)\r\n                        setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                            <NoConnection svgHeight={290} svgWidth={336} />\r\n                        </div>)\r\n                    });\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleItemClick = e => {\r\n\r\n        let fileName = itemDataa.fileName;\r\n        let fileType = itemDataa.fileType;\r\n        let fileSize = itemDataa.fileSize;\r\n\r\n        switch (e.value) {\r\n            case \"rename\":\r\n                // logic to remove the row\r\n                console.log(fileName + \" \" + \"rename\"); // contain to item.id passed by `show`\r\n                setRenameModalState(true);\r\n                break;\r\n\r\n            case \"delete\":\r\n                console.log(\" delete \" + fileType);\r\n\r\n                setTransferItemDetails({ fileSize: fileSize, fileType: fileType, fileName: fileName, transferType: \"Delete\" });\r\n\r\n                let deletePath = currentDirectoryPath + '/' + fileName\r\n                console.log(deletePath);\r\n                console.log(fileType)\r\n\r\n                if (fileType === 2) {\r\n                    // Delete a directory\r\n                    console.log('deleting a folder');\r\n                    axios.post('/deleteDir', { path: currentDirectoryPath, fileName: fileName, connectionDetails: connectionDetails })\r\n                        .then(res => {\r\n                            setFileList(res.data);\r\n                            setSearchTerm(\"\")\r\n                            setSnackbarStatus(true);\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while deleting file');\r\n                            setConnectionLiveStatus(false);\r\n                            setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                                <NoConnection svgHeight={290} svgWidth={336} />\r\n                            </div>)\r\n                        });\r\n                }\r\n                else {\r\n                    // Delete a file\r\n                    console.log('deleting a file');\r\n                    axios.post('/deleteFile', { path: currentDirectoryPath, fileName: fileName, connectionDetails: connectionDetails })\r\n                        .then(res => {\r\n                            setFileList(res.data);\r\n                            setSearchTerm(\"\")\r\n                            setSnackbarStatus(true);\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while deleting file');\r\n                            setConnectionLiveStatus(false);\r\n                            setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                                <NoConnection svgHeight={290} svgWidth={336} />\r\n                            </div>)\r\n                        });\r\n                }\r\n                break;\r\n\r\n            case \"download\":\r\n                console.log(fileType + \" download\");\r\n                // downloading a file.. \r\n                setTransferItemDetails({ fileSize: fileSize, fileType: fileType, fileName: fileName, transferType: \"Download\" });\r\n\r\n                if (fileType === 2) {\r\n                    console.log('downloading a folder');\r\n\r\n                    setTransferModalState(true);\r\n                    setDownloaderComponentUI(\r\n                        true);\r\n\r\n                    axios.post('/downloadDirectory', { path: currentDirectoryPath, name: fileName, connectionDetails: connectionDetails })\r\n                        .then(res => {\r\n                            setDownloaderComponentUI(false)\r\n                            setTransferModalState(false);\r\n                            setSnackbarStatus(true);\r\n                            // alert(res.data + ' Implement a download progress bar');\r\n                        })\r\n                        .catch(() => {\r\n                            console.log('error while going back');\r\n                            setConnectionLiveStatus(false);\r\n                            setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                                <NoConnection svgHeight={290} svgWidth={336} />\r\n                            </div>)\r\n                        });\r\n                }\r\n                else {\r\n                    // downloading a file\r\n                    setTransferModalState(true);\r\n                    setDownloaderComponentUI(\r\n                        true);\r\n\r\n                    console.log(\"Before download \" + downloaderComponentUI);\r\n\r\n                    axios.post('/downloadFile', { path: currentDirectoryPath, name: fileName, connectionDetails: connectionDetails })\r\n                        .then(res => {\r\n                            console.log(\"After download: \" + downloaderComponentUI);\r\n                            setDownloaderComponentUI(false)\r\n                            setTransferModalState(false);\r\n                            setSnackbarStatus(true);\r\n                            // alert(res.data + ' Implement a download progress bar');\r\n                        })\r\n                        .catch((e) => {\r\n                            setConnectionLiveStatus(false);\r\n                            setErrorSVG(<div className=\"noFilesImageDashboard\" >\r\n                                <NoConnection svgHeight={290} svgWidth={336} />\r\n                            </div>)\r\n                        });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const renameItem = newName => {\r\n        // let oldName = itemData.slice(0, -1);\r\n        let oldName = itemDataa.fileName;\r\n        let ext = oldName.split('.').pop();\r\n\r\n        newName = newName + '.' + ext;\r\n\r\n        axios.post('/renameFile', { oldName: oldName, path: currentDirectoryPath, newName: newName, connectionDetails: connectionDetails })\r\n            .then(res => {\r\n                setFileList(res.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log('error while renaming file ' + e);\r\n            })\r\n    }\r\n\r\n    const closeRenameModal = () => {\r\n        setRenameModalState(false);\r\n    }\r\n\r\n    const closeTransferModal = () => {\r\n        setTransferModalState(false);\r\n    }\r\n\r\n    const closeSnackbar = () => {\r\n        setSnackbarStatus(false);\r\n    }\r\n\r\n    const goBack = () => {\r\n        const p = (currentDirectoryPath.slice(0, currentDirectoryPath.lastIndexOf('/')));\r\n        if (p !== '') {\r\n            axios.post('/changePath', { path: p, connectionDetails: connectionDetails })\r\n                .then(res => {\r\n                    setFileList(res.data);\r\n                })\r\n                .catch((e) => {\r\n                    console.log('error while going back ' + e);\r\n                });\r\n            setCurrentDirectoryPath(currentDirectoryPath.slice(0, currentDirectoryPath.lastIndexOf('/')))\r\n        }\r\n        else {\r\n            alert('nope nope')\r\n        }\r\n    }\r\n\r\n    const displayMenu = (e, fileName, fileType, fileSize) => {\r\n        e.preventDefault();\r\n        setAnchorPoint({ x: e.clientX, y: e.clientY });\r\n        setOpen(true);\r\n        setItemDataa({ fileName: fileName, fileType: fileType, fileSize: fileSize });\r\n    };\r\n\r\n    const updateSearchResult = async (input) => {\r\n        // setSearchTerm(event.target.value)\r\n        let results = [];\r\n        if (fileList.length > 0) {\r\n            fileList.map(jsFrameworksSearch => {\r\n                if (jsFrameworksSearch.name.toLowerCase().includes(input.trim()))\r\n                    results.push(jsFrameworksSearch)\r\n            })\r\n        }\r\n        setSearchTerm(input)\r\n        setSearchResults(results);\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-screen\">\r\n            <h1 className=\"dashboard-copy poppins-bold-black-27-3px\">Dashboard</h1>\r\n            <div className=\"dashboard-storage-details\">\r\n                <div className=\"dashboard-overlap-group\" onClick={() => changeRoute(\"/explorer\")}>\r\n                    <div className=\"dashboard-overlap-group-header\">\r\n                        <img className=\"macos-folder-icon\" src=\"/images/macos-folder-icon.png\" />\r\n                        <div className=\"internal-storage poppins-medium-black-14px\">Internal Storage</div>\r\n                    </div>\r\n                    <div className=\"storage-progress\">\r\n                        <progress max=\"100\" value={storagePercent}></progress>\r\n                        <div className=\"storage-progress-count poppins-regular-black-12px\">\r\n                            {console.log(connectionDetails)}\r\n                            <p>{connectionDetails.usedSpace + \" GB\"}</p>\r\n                            <p>{connectionDetails.totalSize + \" GB\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"recently-used\">\r\n                <div className=\"dashboard-recently-used-title\">\r\n                    <div className=\"downloadsPath\">\r\n                        <div className=\"recently-used-1 poppins-medium-black-18px\">\r\n                            {currentDirectoryPath === '/Download' ? 'Downloads ' : currentDirectoryPath.slice(2).replaceAll('/', ' > ')}\r\n                        </div>\r\n                        {currentDirectoryPath != '/Download' ? <span className=\"goBack\">\r\n                            <img alt=\"goBack\" onClick={() => goBack()}\r\n                                className=\"goBackImg\" src=\"/images/icons/goBack.svg\"></img>\r\n                        </span> : null}\r\n                        {/* <span className=\"goBack\">\r\n                            <img alt=\"goBack\" onClick={() => goBack()}\r\n                                className=\"goBackImg\" src=\"/images/icons/goBack.svg\"></img>\r\n                        </span> */}\r\n                        <SearchBar input={searchTerm} onChange={updateSearchResult} />\r\n                    </div>\r\n                    <div className=\"view-all poppins-regular-normal-black-14px\"\r\n                        onClick={() => changeRoute(\"/explorer\")}>View all</div>\r\n                </div>\r\n                <div className=\"recently-used-data\">\r\n                    <div className=\"recently-used-name valign-text-middle poppins-light-black-14px\">Name</div>\r\n                    <div className=\"recently-used-last-m valign-text-middle poppins-light-black-14px\">Last Modified</div>\r\n                    <div className=\"size valign-text-middle poppins-light-black-14px\">Size</div>\r\n                </div>\r\n\r\n                {/* Rename */}\r\n                <Modal\r\n                    show={renameModalState}\r\n                    modalClosed={closeRenameModal}\r\n                    color=\"#fff\">\r\n                    <CreateFolder\r\n                        placeholder=\"Enter new name\"\r\n                        title={\"Rename \" + itemDataa.fileName}\r\n                        create={(newName) => renameItem(newName)}\r\n                        closeHandler={closeRenameModal}\r\n                        action=\"Rename\"\r\n                        path={currentDirectoryPath + '/' + itemDataa.fileName} />\r\n                </Modal>\r\n\r\n                {/* popup for transfer progress */}\r\n                <Modal\r\n                    show={transferModalState}\r\n                    // modalClosed={closeTransferModal}\r\n                    color=\"#fff\">\r\n                    <DownloadPopup\r\n                        placeholder={transferItemDetails.transferType}\r\n                        name={transferItemDetails.fileName}\r\n                        // create={(newName) => renameItem(newName)}\r\n                        type={transferItemDetails.fileType}\r\n                        closeHandler={closeTransferModal}\r\n                        size={transferItemDetails.fileSize}\r\n                        path={currentDirectoryPath + '/' + transferItemDetails.fileName.split('.').slice(0, -1).join('.')} />\r\n                </Modal>\r\n\r\n                {/* Snackbar */}\r\n                <div className=\"explorer-snackbar\">\r\n                    <Snackbar\r\n                        transferType={transferItemDetails.transferType}\r\n                        handleSnackbarClose={closeSnackbar}\r\n                        show={snackbarStatus} />\r\n                </div>\r\n\r\n                <DragAndDrop handleDrop={handleDrop}>\r\n                    <div className=\"recently-used-explorer-data\">\r\n                        {searchResults.length > 0 && connectionLiveStatus ? searchResults.map((item, index) => {\r\n                            return (\r\n                                <FileComponent key={index}\r\n                                    id={item.name + item.type}\r\n                                    onContextMenu={(e) => displayMenu(e, item.name, item.type, item.size)}\r\n                                    onClick={() => changePath(item.name, item.type, item.size)}\r\n                                    name={item.name}\r\n                                    type={item.type}\r\n                                    size={item.size}\r\n                                    lastMod={item.modifiedAt} />\r\n                            )\r\n                        }) : errorSVG}\r\n\r\n                        {/* <Menu id={MENU_ID}>\r\n                        <Item id=\"rename\" onClick={handleItemClick}>\r\n                            Rename\r\n                        </Item>\r\n                        <Item id=\"delete\" onClick={handleItemClick}>\r\n                            Delete\r\n                        </Item>\r\n                        <Item id=\"download\" onClick={handleItemClick}>\r\n                            Download\r\n                        </Item>\r\n                    </Menu> */}\r\n\r\n                        <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\r\n                            onClose={() => setOpen(false)}>\r\n                            <MenuItem value=\"rename\" onClick={handleItemClick}>\r\n                                Rename\r\n                        </MenuItem>\r\n                            <MenuItem value=\"delete\" onClick={handleItemClick}>\r\n                                Delete\r\n                        </MenuItem>\r\n                            <MenuItem value=\"download\" onClick={handleItemClick}>\r\n                                Download\r\n                        </MenuItem>\r\n                        </ControlledMenu>\r\n\r\n                    </div>\r\n                </DragAndDrop>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FilesMenu2;","D:\\Projects\\JS\\NoWires\\client\\src\\pages\\About\\About.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\PhoneSection\\Phone.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\Errors\\NoFiles\\NoFiles.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Footer\\Footer.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\pages\\FileExplorer\\ExplorerMenu\\ExplorerMenu.js",["155","156","157","158","159","160","161","162","163","164"],"D:\\Projects\\JS\\NoWires\\client\\src\\pages\\FileExplorer\\FileExplorer.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\components\\Snackbar\\Snackbar.js",["165","166","167","168"],"D:\\Projects\\JS\\NoWires\\client\\src\\helpers\\useSingleClick\\useSingleAndDoubleClicks.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\pages\\Contact\\Contact.js",[],"D:\\Projects\\JS\\NoWires\\client\\src\\Errors\\NoConnection\\NoConnection.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":52,"column":50,"nodeType":"179","endLine":52,"endColumn":114},{"ruleId":"177","severity":1,"message":"178","line":56,"column":49,"nodeType":"179","endLine":56,"endColumn":110},{"ruleId":"177","severity":1,"message":"178","line":60,"column":49,"nodeType":"179","endLine":60,"endColumn":108},{"ruleId":"180","severity":1,"message":"181","line":12,"column":9,"nodeType":"182","messageId":"183","endLine":12,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":29,"column":17,"nodeType":"182","messageId":"183","endLine":29,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":103,"column":6,"nodeType":"186","endLine":103,"endColumn":8,"suggestions":"187"},{"ruleId":"169","replacedBy":"188"},{"ruleId":"171","replacedBy":"189"},{"ruleId":"173","severity":1,"message":"190","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"191","line":6,"column":11,"nodeType":"175","messageId":"176","endLine":6,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":42,"column":21,"nodeType":"179","endLine":42,"endColumn":86},{"ruleId":"184","severity":1,"message":"194","line":64,"column":8,"nodeType":"186","endLine":64,"endColumn":30,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":69,"column":45,"nodeType":"198","messageId":"199","endLine":69,"endColumn":47},{"ruleId":"184","severity":1,"message":"200","line":82,"column":8,"nodeType":"186","endLine":82,"endColumn":30,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":211,"column":44,"nodeType":"204","messageId":"205","endLine":211,"endColumn":45},{"ruleId":"196","severity":1,"message":"197","line":372,"column":45,"nodeType":"198","messageId":"199","endLine":372,"endColumn":47},{"ruleId":"192","severity":1,"message":"193","line":387,"column":25,"nodeType":"179","endLine":387,"endColumn":98},{"ruleId":"206","severity":1,"message":"207","line":406,"column":47,"nodeType":"204","messageId":"183","endLine":406,"endColumn":49},{"ruleId":"173","severity":1,"message":"208","line":8,"column":23,"nodeType":"175","messageId":"176","endLine":8,"endColumn":34},{"ruleId":"173","severity":1,"message":"209","line":46,"column":12,"nodeType":"175","messageId":"176","endLine":46,"endColumn":27},{"ruleId":"173","severity":1,"message":"210","line":46,"column":29,"nodeType":"175","messageId":"176","endLine":46,"endColumn":47},{"ruleId":"173","severity":1,"message":"211","line":47,"column":12,"nodeType":"175","messageId":"176","endLine":47,"endColumn":17},{"ruleId":"173","severity":1,"message":"212","line":47,"column":19,"nodeType":"175","messageId":"176","endLine":47,"endColumn":27},{"ruleId":"184","severity":1,"message":"194","line":90,"column":8,"nodeType":"186","endLine":90,"endColumn":30,"suggestions":"213"},{"ruleId":"196","severity":1,"message":"197","line":95,"column":45,"nodeType":"198","messageId":"199","endLine":95,"endColumn":47},{"ruleId":"184","severity":1,"message":"200","line":112,"column":8,"nodeType":"186","endLine":112,"endColumn":30,"suggestions":"214"},{"ruleId":"202","severity":1,"message":"203","line":392,"column":44,"nodeType":"204","messageId":"205","endLine":392,"endColumn":45},{"ruleId":"196","severity":1,"message":"197","line":503,"column":45,"nodeType":"198","messageId":"199","endLine":503,"endColumn":47},{"ruleId":"173","severity":1,"message":"215","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"216","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"217","line":7,"column":7,"nodeType":"175","messageId":"176","endLine":7,"endColumn":17},{"ruleId":"173","severity":1,"message":"218","line":15,"column":11,"nodeType":"175","messageId":"176","endLine":15,"endColumn":27},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Contact' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'totalSize'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connectionDetails', 'currentDirectoryPath', 'name', and 'removeFile'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["221"],["219"],["220"],"'BiSearch' is defined but never used.","'BarStyling' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'connectionDetails'. Either include it or remove the dependency array.",["222"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'connectionDetails.host'. Either include it or remove the dependency array.",["223"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '!==' and instead saw '!='.","'useDispatch' is defined but never used.","'transferPercent' is assigned a value but never used.","'setTransferPercent' is assigned a value but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.",["224"],["225"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'desktopDir' is assigned a value but never used.","'openExplorerLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"228","fix":"232"},{"desc":"230","fix":"233"},"Update the dependencies array to be: [connectionDetails, currentDirectoryPath, name, removeFile]",{"range":"234","text":"235"},"Update the dependencies array to be: [connectionDetails, currentDirectoryPath]",{"range":"236","text":"237"},"Update the dependencies array to be: [searchTerm, fileList, connectionDetails.host]",{"range":"238","text":"239"},{"range":"240","text":"237"},{"range":"241","text":"239"},[2757,2759],"[connectionDetails, currentDirectoryPath, name, removeFile]",[2917,2939],"[connectionDetails, currentDirectoryPath]",[3506,3528],"[searchTerm, fileList, connectionDetails.host]",[4104,4126],[4891,4913]]